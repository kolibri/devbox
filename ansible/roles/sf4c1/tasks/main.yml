---
- name: install apt-transport-https
  become: true
  apt:
    name: apt-transport-https
    state: latest
    update_cache: yes

- name: Add apt keys
  become: true
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - https://dl.yarnpkg.com/debian/pubkey.gpg
    - https://packages.sury.org/php/apt.gpg

- name: add apt repos
  become: true
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - deb https://dl.yarnpkg.com/debian/ stable main
    - deb https://packages.sury.org/php/ stretch main

- name: install packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  become: true
  with_items:
    - acl
    - apache2
    - curl
    - git
    - sqlite3
#    - mysql-server
    - php7.2
    - php7.2-cli
    - php7.2-curl
    - php7.2-gd
    - php7.2-intl
    - php7.2-mysql
    - php7.2-xdebug
    - php7.2-xml
    - php7.2-zip
    - python-mysqldb
    - nodejs
    - yarn

- name: enable apache rewrite module
  become: true
  apache2_module:
    state: present
    name: rewrite
  notify:
    - restart apache

- name: install vhost template
  become: true
  template:
    src: vhost.conf.j2
    dest: /etc/apache2/sites-enabled/000-default.conf
  notify:
    - restart apache

- name: php.ini settings for apache
  become: true
  lineinfile:
    dest: '/etc/php/7.2/apache2/php.ini'
    line: "{{ item.key }}='{{ item.value }}'"
    regexp: "^{{ item.key }}.*$"
  with_dict: "{{ php_ini }}"
  notify:
    - restart apache

- name: php.ini settings for cli
  become: true
  lineinfile:
    dest: '/etc/php/7.2/cli/php.ini'
    line: "{{ item.key }}='{{ item.value }}'"
    regexp: "^{{ item.key }}.*$"
  with_dict: "{{ php_ini }}"

#- name: add mysql user
#  become: true
#  mysql_user:
#    name: "{{ mysql_user }}"
#    password: "{{ mysql_password }}"
#    priv: "*.*:ALL"

- name: check if composer is installed
  stat:
    path: /usr/local/bin/composer
  register: composer_state

- block:
  - name: get composer signature
    uri:
      url: https://composer.github.io/installer.sig
      return_content: true
    register: composer_sig

  - name: download installer
    become: true
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/composer-setup.php
      checksum: "sha384:{{ composer_sig.content }}"

  - name: install composer
    become: true
    command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  when: composer_state.stat.exists == false

- name: enable apache service
  become: true
  service:
    name: apache2
    state: started
    enabled: true

- name: copy xdebug script
  become: true
  copy:
    src: xdebug.sh
    dest: /usr/local/bin/xdebug
    mode: 0755
